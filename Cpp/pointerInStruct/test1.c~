# include <stdio.h>
# include <stdlib.h>

struct test{  
    int i;  
    short c;  
    char *p;  
    char s[10];  
};  
   
int main(){  
    struct test *pt=NULL;
    pt = malloc(sizeof(struct test));
    pt->p = malloc(sizeof(char));//删掉这句后segmentation fault
    pt->p[0] = 't';
    //    pt->p+1 = malloc(sizeof(char));
    pt->p[1] = 'q';
    pt->p[2] = 'p';
    printf("&s = %x\n",pt->s); //等价于printf("%x\n", &(pt->s) );  
    printf("&i = %x\n",&pt->i); //因为操作符优先级，我没有写成&(pt->i)  
    printf("&c = %x\n",&pt->c);  
    printf("&p = %x\n",&pt->p);
    printf("p=%c\n",*(pt->p));
    printf("p=%c\n",*(pt->p+2));
    return 0;  
}  
/*
http://blog.csdn.net/yang_yulei/article/details/23395315
http://blog.csdn.net/imred/article/details/45441457
 */
